{"version":3,"sources":["components/NavBar/NavBar.jsx","services/tokenService.js","services/userService.js","pages/LoginPage/LoginPage.jsx","components/SignupForm/SignupForm.jsx","pages/SignupPage/SignupPage.jsx","services/zodiac-api.js","services/journal-api.js","services/horoscope-api.js","components/ZodiacCard/ZodiacCard.jsx","pages/ZodiacListPage/ZodiacListPage.jsx","components/JournalCard/JournalCard.jsx","pages/ProfilePage/ProfilePage.jsx","pages/JournalPage/AddJournalPage.jsx","pages/EditJournalPage/EditJournalPage.jsx","pages/App/App.js","serviceWorker.js","index.js"],"names":["NavBar","user","handleLogout","nav","className","href","id","name","onClick","getToken","token","localStorage","getItem","JSON","parse","atob","split","exp","Date","now","removeItem","setToken","setItem","getUserFromToken","removeToken","signup","fetch","BASE_URL","method","headers","Headers","body","stringify","then","res","ok","json","Error","tokenService","getUser","logout","login","creds","updateUser","formData","console","log","_id","LoginPage","state","email","pw","handleChange","e","setState","target","value","handleSubmit","a","preventDefault","userService","props","handleSignupOrLogin","history","push","alert","autocomplete","onSubmit","this","type","onChange","htmlFor","class","to","Component","SignupForm","password","passwordConf","updateMessage","message","autoComplete","disabled","isFormInvalid","SignupPage","msg","getAllSigns","mode","getAllJournals","create","journal","deleteOne","update","getAllHoroscopes","response","catch","err","ZodiacCard","sign","alt","src","image","sunSign","dates","element","planet","strengths","weaknesses","likes","dislikes","compatiblity","luckyNumbers","ZodiacListPage","handleAddSign","selected","signs","map","idx","key","JournalCard","handleDeleteJournal","date","pathname","ProfilePage","horoscopes","journals","zodiacAPI","journalAPI","horoscopeAPI","AddJournalPage","formRef","React","createRef","handleAddJournal","newJournalData","newJournal","ref","cols","rows","EditJournalPage","location","handleJournalSubmit","handleUpdateJournal","App","newProfile","updatedJournalData","updatedJournal","newJournalsArray","j","filter","exact","path","render","Boolean","window","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.ed4be13e.chunk.js","sourcesContent":["import React from 'react';\n\nconst NavBar = ({ user, handleLogout }) => {\n    let nav = user ?\n    <>\n        <nav>\n            <div className=\"purple nav-wrapper\">\n            <a href=\"/\" className=\"brand-logo\"><i className=\"material-icons\">brightness_7</i>Horoscope Journal</a>\n                <ul id=\"nav-mobile\" className=\"right\">\n                    <li><a href=\" \" className=\"nav-link\">Welcome, {user.name}</a></li>\n                    <li><a href=\"/profile\" className=\"nav-link\">Profile</a></li>\n                    <li><a href=\" \" className=\"nav-link\" onClick={handleLogout}>Log Out</a></li>\n                </ul>\n            </div>\n        </nav>\n    </>\n    :\n    <>\n        <nav>\n            <div className=\"purple nav-wrapper\">\n            <a href=\"#!\" className=\"brand-logo\"><i className=\"material-icons\">brightness_7</i>Horoscope Journal</a>\n                <ul id=\"nav-mobile\" className=\"right\">\n                <li><a href=\"/login\" className=\"nav-link\">Log In</a></li>\n                    <li><a href=\"/signup\" className=\"nav-link\">Sign Up</a></li>\n                </ul>\n            </div>\n        </nav>\n    </>\n\n    return (\n    <>\n        {nav}\n    </>\n    )\n}\n\nexport default NavBar;","function setToken(token) {\n    if (token) {\n      localStorage.setItem('token', token);\n    } else {\n      localStorage.removeItem('token');\n    } \n  }\n  \nfunction getUserFromToken () {\n  const token = getToken();\n  return token ? JSON.parse(atob(token.split('.')[1])).user : null;\n}\n\nfunction getToken() {\n  let token = localStorage.getItem('token');\n  if (token) {\n    // Check if expired, remove if it is\n    const payload = JSON.parse(atob(token.split('.')[1]));\n    // JWT's exp is expressed in seconds, not milliseconds, so convert\n    if (payload.exp < Date.now() / 1000) {\n      localStorage.removeItem('token');\n      token = null;\n    }\n  }\n  return token;\n}\n\nfunction removeToken() {\n    localStorage.removeItem('token');\n}\n\nexport default {\n    setToken,\n    getToken,\n    getUserFromToken,\n    removeToken,\n  };","import tokenService from '../services/tokenService';\nconst BASE_URL = '/api/users/';\n\nfunction signup(user) {\n  return fetch(BASE_URL + 'signup', {\n    method: 'POST',\n    headers: new Headers({'Content-Type': 'application/json'}),\n    body: JSON.stringify(user)\n  })\n  .then(res => {\n    if (res.ok) return res.json();\n    throw new Error('Email already taken!');\n  })\n  // Parameter destructuring!\n  .then(({ token }) => {\n    tokenService.setToken(token);\n  });\n  // the above could have been written as\n  //.then((token) => token.token);\n}\n\nfunction getUser() {\n  return tokenService.getUserFromToken();\n}\n\nfunction logout() {\n  tokenService.removeToken();\n}\n\nfunction login(creds) {\n  return fetch(BASE_URL + 'login', {\n    method: 'POST',\n    headers: new Headers({'Content-Type': 'application/json'}),\n    body: JSON.stringify(creds)\n  })\n  .then(res => {\n    // Valid login if we have a status of 2xx (res.ok)\n    if (res.ok) return res.json();\n    throw new Error('Bad Credentials!');\n  })\n  .then(({token}) => tokenService.setToken(token));\n}\n\nfunction updateUser(formData){\n  console.log(formData);\n  return fetch(BASE_URL + formData.user._id, {\n    method: 'PUT',\n    headers:{'Authorization': 'Bearer ' + tokenService.getToken(), 'Content-Type': 'application/json'},\n    body: JSON.stringify(formData)\n  })\n  .then (res => res.json())\n}\n\nexport default {\n  signup,\n  getUser,\n  logout,\n  login,\n  updateUser\n};","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport './LoginPage.css';\nimport userService from '../../services/userService';\n\nclass LoginPage extends Component {\n  \n  state = {\n    email: '',\n    pw: ''\n  };\n\n  handleChange = (e) => {\n    this.setState({\n      // Using ES2015 Computed Property Names\n      [e.target.name]: e.target.value\n    });\n  }\n\n  handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      await userService.login(this.state);\n      // Let <App> know a user has signed up!\n      this.props.handleSignupOrLogin();\n      this.props.history.push('/');\n    } catch (err) {\n      // Use a modal or toast in your apps instead of alert\n      alert('Invalid Credentials!');\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"LoginPage\">\n        <h3>Log In</h3>\n        <form className=\"col s12\" autocomplete=\"off\" onSubmit={this.handleSubmit} >\n          <div className=\"row\">\n            <div className=\"input-field col s12\">\n              <input type=\"text\" autocomplete=\"off\" id=\"email\" className=\"active\" value={this.state.email} name=\"email\" onChange={this.handleChange} />\n              <label htmlFor=\"email\">Email</label>\n\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"input-field col s12\">\n              <input type=\"password\" autocomplete=\"off\" className=\"active\" id=\"password\" value={this.state.pw} name=\"pw\" onChange={this.handleChange} />\n              <label htmlFor=\"password\">Password</label>\n\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col s12\">\n              <button className=\"btn green\">Log In<i class=\"material-icons right\">arrow_forward</i></button>&nbsp;&nbsp;&nbsp;\n              <Link className=\"btn red\" to='/'>Cancel<i class=\"material-icons right\">cancel</i></Link>\n            </div>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default LoginPage;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport userService from '../../services/userService';\nimport './SignUpForm.css';\n\nclass SignupForm extends Component {\n\n  state = {\n    name: '',\n    email: '',\n    password: '',\n    passwordConf: ''\n  };\n\n  handleChange = (e) => {\n    this.props.updateMessage('');\n    this.setState({\n      // Using ES2015 Computed Property Names\n      [e.target.name]: e.target.value\n    });\n  }\n\n  handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      await userService.signup(this.state);\n      this.props.handleSignupOrLogin();\n      this.props.history.push('/');\n    } catch (err) {\n      // Invalid user data (probably duplicate email)\n      this.props.updateMessage(err.message);\n    }\n  }\n\n  isFormInvalid() {\n    return !(this.state.name && this.state.email && this.state.password === this.state.passwordConf);\n  }\n\n  render() {\n    return (\n      <div>\n        <h3>Sign Up</h3>\n        <form className=\"col s12\" autoComplete=\"off\" onSubmit={this.handleSubmit} >\n          <div className=\"row\">\n            <div className=\"input-field col s12\">\n              <input type=\"text\" autoComplete=\"off\" className=\"col s12\" id=\"name\" value={this.state.name} name=\"name\" onChange={this.handleChange} />\n              <label htmlFor=\"name\">Name</label>\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"input-field col s12\">\n              <input type=\"text\" autoComplete=\"off\" className=\"active\" id=\"email\" value={this.state.email} name=\"email\" onChange={this.handleChange} />\n              <label htmlFor=\"email\">Email</label>\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"input-field col s12\">\n              <input type=\"password\" autoComplete=\"off\" className=\"active\" id=\"password\" value={this.state.password} name=\"password\" onChange={this.handleChange} />\n              <label htmlFor=\"password\">Password</label>\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"input-field col s12\">\n              <input type=\"password\" autoComplete=\"off\" className=\"active\" id=\"confirm\" value={this.state.passwordConf} name=\"passwordConf\" onChange={this.handleChange} />\n              <label htmlFor=\"confirm\">Confirm Password</label>\n            </div>\n          </div>\n          <div className=\"form-group\">\n            <div className=\"col-sm-12 text-center\">\n              <button className=\"btn green\" disabled={this.isFormInvalid()}>Sign Up<i className=\"material-icons right\">person_add</i></button>&nbsp;&nbsp;\n              <Link className=\"btn red\" to='/'>Cancel<i className=\"material-icons right\">cancel</i></Link>\n            </div>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default SignupForm;\n","import React, { Component } from 'react';\nimport SignupForm from '../../components/SignupForm/SignupForm';\nimport './SignupPage.css';\n\nclass SignupPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {message: ''}\n  }\n\n  updateMessage = (msg) => {\n    this.setState({message: msg});\n  }\n\n  render() {\n    return (\n      <div className='SignupPage'>\n        <SignupForm {...this.props} updateMessage={this.updateMessage} />\n        <p>{this.state.message}</p>\n      </div>\n    );\n  }\n}\n\nexport default SignupPage;","const BASE_URL = 'http://localhost:3002/api/signs/'\n\nexport function getAllSigns() {\n    return fetch(BASE_URL, {mode: 'cors'})\n    .then(res => res.json())\n}\n\nexport function getOneSign() {\n    return fetch('http://localhost:3002/api/signs/?sunSign', {mode: 'cors'})\n    .then(res => res.json())\n}","import tokenService from '../services/tokenService';\nconst BASE_URL = '/journal/';\n\nexport function getAllJournals() {\n    return fetch(BASE_URL, {\n        headers: {'Authorization': 'Bearer ' + tokenService.getToken()}\n    }, {mode: \"cors\"})\n    .then(res => res.json())\n}\n\nexport function create(journal) {\n    return fetch(BASE_URL, {\n        method: \"POST\",\n        headers: {'content-type': 'application/json', 'Authorization': 'Bearer ' + tokenService.getToken()},\n        body: JSON.stringify(journal)\n    }, {mode: \"cors\"})\n    .then(res => res.json());\n}\n\nexport function deleteOne(id) {\n    return fetch(`${BASE_URL}${id}`, {\n        method: \"DELETE\",\n        headers: {'Authorization': 'Bearer ' + tokenService.getToken()}\n    }, {mode: \"cors\"})\n    .then(res => res.json());\n}\n\nexport function update(journal) {\n    return fetch(`${BASE_URL}${journal._id}`, {\n        method: \"PUT\",\n        headers: {'content-type': 'application/json', 'Authorization': 'Bearer ' + tokenService.getToken()},\n        body: JSON.stringify(journal)\n    }, {mode: \"cors\"})\n    .then(res => res.json());\n}","const BASE_URL = 'https://horoscope5.p.rapidapi.com/general/daily'\n\nexport function getAllHoroscopes() {\n    return fetch(`${BASE_URL}`, {\n        \"method\": \"GET\",\n        \"headers\": {\n            \"x-rapidapi-host\": \"horoscope5.p.rapidapi.com\",\n            \"x-rapidapi-key\": \"e35f0ee64amshcda9aeefbab8135p186451jsn7c721c27639f\"\n        }\n    })\n    .then(response => {\n        console.log(response);\n    })\n    .catch(err => {\n        console.log(err);\n    });\n}","import React from 'react';\nimport './ZodiacCard.css'\n\nfunction ZodiacCard({sign}){\n    return(\n        <>\n        <div className=\"card\">\n        <div className=\"card-image waves-effect waves-block waves-light\">\n          <img className=\"activator\" alt=\"zodiac\" src={sign.image ? sign.image : \"https://www.cebodtelecom.com/wp-content/uploads/2014/09/related_post_no_available_image.png\"} onClick={()=> {}}/>\n        </div>\n        <div className=\"card-content\">\n          <span className=\"card-title activator white-text text-darken-4\"><b>{sign.sunSign}</b><i className=\"material-icons right\">more_vert</i></span>\n        </div>\n        <div className=\"card-reveal\">\n          <span className=\"card-title grey-text text-darken-4\">{sign.sunSign}<i className=\"material-icons right\">close</i></span>\n            <br/>\n            <div><b>Dates:</b> {sign.dates}</div>\n            <div><b>Element:</b> {sign.element}</div>\n            <div><b>Planet:</b> {sign.planet}</div>\n            <hr/>\n            <div><b>Strengths:</b> {sign.strengths}</div>\n            <br/>\n            <div><b>Weaknesses:</b> {sign.weaknesses}</div>\n            <br/>\n            <div><b>Likes:</b> {sign.likes}</div>\n            <br/>\n            <div><b>Dislikes:</b> {sign.dislikes}</div>\n            <br/>\n            <div><b>Compatibility:</b> {sign.compatiblity}</div>\n            <br/>\n            <div><b>Lucky Numbers:</b> {sign.luckyNumbers}</div>\n        </div>\n      </div>\n      </>\n    )\n}\n\nexport default ZodiacCard;\n","import React, { Component } from 'react';\nimport './ZodiacListPage.css';\nimport * as zodiacAPI from '../../services/zodiac-api'\nimport ZodiacCard from '../../components/ZodiacCard/ZodiacCard';\nimport userService from '../../services/userService';\n\nclass ZodiacListPage extends Component{\n    state = {\n        \n        formData: {\n            user: userService.getUser(),\n            sign: ''\n        }\n    }\n\n   \n    \n    handleSubmit = e => {\n        e.preventDefault();\n        this.props.handleAddSign(this.state.formData)\n    };\n    \n    handleChange = e => {\n        const formData = {...this.state.formData, [e.target.name]: e.target.value};\n        this.setState({\n            formData,\n        });\n      };\n\n\n    render() {\n        console.log(this.props)\n        return (\n            <>\n                <br/>\n                {this.props.user !== '' ?\n                <form onSubmit={this.handleSubmit}>          \n                <select name=\"signs\" className=\"browser-default col s6\" onChange={this.handleChange}>\n                    <option value=\"\" disabled selected>Choose your Sign</option>\n                    <option value=\"Capricorn\">Capricorn</option>\n                    <option value=\"Aquarius\">Aquarius</option>\n                    <option value=\"Pisces\">Pisces</option>\n                    <option value=\"Aires\">Aries</option>\n                    <option value=\"Taurus\">Taurus</option>\n                    <option value=\"Gemini\">Gemini</option>\n                    <option value=\"Cancer\">Cancer</option>\n                    <option value=\"Leo\">Leo</option>\n                    <option value=\"Virgo\">Virgo</option>\n                    <option value=\"Libra\">Libra</option>\n                    <option value=\"Scorpio\">Scorpio</option>\n                    <option value=\"Sagittarius\">Sagittarius</option>\n                </select>\n                <button className=\"btn #4dd0e1 cyan lighten-2 waves-effect waves-light\" type=\"submit\" name=\"action\">Add to Profile\n                    <i className=\"material-icons right\">send</i>\n                </button>\n                </form>  \n                :\n                <></>\n        }\n                <br></br>\n                <div className='ZodiacListPage-grid'>\n                    {this.props.signs.map((sign, idx) => \n                        <ZodiacCard\n                            key={idx}\n                            sign={sign}\n                        />\n                    )}\n                </div>\n            </>\n        )\n    }\n}\n\nexport default ZodiacListPage;","import React from 'react';\nimport './JournalCard.css';\nimport { Link } from 'react-router-dom';\n\nfunction JournalCard({ journal, handleDeleteJournal }) {\n    return(\n        <>\n        <div className=\"row\">\n            <div className=\"col s12 m6\">\n            <div className=\"journalcard black\">\n                <div className=\"journalcard-content white-text\">\n                <span className=\"journalcard-title\">{journal.date}</span>\n                <hr/>\n                <p>{journal.journal}</p>\n                <br/>\n                <div className=\"journalcard-action\">\n                    <button type=\"submit\" className=\"btn red\" onClick={() => handleDeleteJournal(journal._id)}>\n                    <i className=\"material-icons left\">delete</i>    \n                        Delete\n                    </button>\n                    <Link\n                        className=\"btn #4dd0e1 cyan white-text\"\n                        to={{\n                            pathname: '/edit',\n                            state: {journal}\n                        }}\n                    ><i className=\"material-icons left\">build</i>\n                        Edit \n                    </Link>\n            </div>\n        </div>\n      </div>\n    </div>\n  </div>\n        </>\n    ) \n}\n\nexport default JournalCard;","import React from 'react';\nimport './ProfilePage.css';\nimport * as zodiacAPI from '../../services/zodiac-api';\nimport * as journalAPI from '../../services/journal-api';\nimport * as horoscopeAPI from '../../services/horoscope-api';\nimport JournalCard from '../../components/JournalCard/JournalCard';\nimport { Link } from 'react-router-dom';\nimport { Component } from 'react';\n\n\nclass ProfilePage extends Component{\n    state = {\n        sign: '',\n        horoscopes: [],\n        journals: []\n    }\n    async componentDidMount() {\n        const signs = await zodiacAPI.getAllSigns();\n        const journals = await journalAPI.getAllJournals();\n        const horoscopes = await horoscopeAPI.getAllHoroscopes();\n        this.setState({journals})\n        this.setState({signs})\n        this.setState({horoscopes})\n      }\n\n    render(){\n        return(\n            <>\n                <div className=\"profilePage\">\n                    <div className=\"sign\">\n                        <div className=\"zodiac-sign\">Zodiac Sign</div>\n                        <div>image</div>\n                        <div>Birthdates:</div>\n                        <div>Element:</div>\n                        <div>Planet:</div>\n                        <div>Strenghts:</div>\n                        <div>Weaknesses:</div>\n                        <div>Likes:</div>\n                        <div>Dislikes:</div>\n                        <div>Compatibility:</div>\n                        <div>Lucky Numbers:</div>\n                    </div>\n                    <div className=\"horoscope\">\n                        <h2>Horoscope</h2>\n                        <div className=\"horoscope-display\">Daily Horoscope Display</div>\n                    </div>\n                    <div className=\"journal\">\n                        <h3>Journal</h3>\n                        <div id=\"journal-box\">\n                            <div className=\"journal-display\">\n                                {this.state.journals.map(journal => \n                                    <JournalCard\n                                        key={journal._id}\n                                        journal={journal}\n                                        handleDeleteJournal={this.handleDeleteJournal}\n                                    />\n                                )}\n                            </div>\n                        </div>\n                        <br/>\n                        <Link className=\"btn pink lighten-1\"\n                            to={{ pathname: '/journal' }}>\n                                Add Journal Entry\n                        </Link>\n                        <br/>\n                    </div>\n                </div>\n            </>\n        )\n    }\n}\n\nexport default ProfilePage;","import React, { Component } from 'react';\nimport * as journalAPI from '../../services/journal-api';\nimport './JournalPage.css';\n\nclass AddJournalPage extends Component{\n    state = {\n    journals: [],\n    formData:{\n        journal: ''\n    }\n    };\n\n    async componentDidMount() {\n        const journals = await journalAPI.getAllJournals();\n        this.setState({journals})\n        \n      }\n\n    formRef = React.createRef();\n\n    handleSubmit = e => {\n        e.preventDefault();\n        this.props.handleAddJournal(this.state.formData)\n    };\n\n    handleChange = e => {\n        const formData = {...this.state.formData, [e.target.name]: e.target.value};\n        this.setState({\n            formData,\n        });\n      };\n\n      handleAddJournal = async newJournalData => {\n        const newJournal = await journalAPI.create(newJournalData);\n        this.setState(state => ({\n          journal: [...state.journal, newJournal]\n        }), ()=> this.props.history.push('/journal'));\n      }\n\n\n    render(){\n        return(\n            <>\n            <div className=\"journalPage\">\n                <h1>Add Journal Entry</h1>\n                <h3>Today my horoscope:</h3>\n                <form className=\"journal_entry\" ref={this.formRef} onSubmit={this.handleSubmit}>\n                    <textarea name=\"journal\" id=\"entry\" cols=\"30\" rows=\"10\" type=\"text\" \n                        value={this.state.formData.journal}\n                        onChange={this.handleChange}/>\n                    <button\n                        type=\"submit\"\n                        className=\"btn #4dd0e1 cyan lighten-2 waves-effect waves-light\">\n                            Add to Profile\n                        <i className=\"material-icons right\">send</i>\n                    </button>\n                </form> \n            </div>\n        </>\n        )\n    }\n}\n\nexport default AddJournalPage;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\n\nclass EditJournalPage extends Component{\n    state = {\n        formData: this.props.location.state.journal\n    };\n\n    formRef = React.createRef();\n\n    handleJournalSubmit = e => {\n        e.preventDefault();\n        this.props.handleUpdateJournal(this.state.formData)\n    };\n\n    handleChange = e => {\n        const formData = {...this.state.formData, [e.target.name]: e.target.value};\n        this.setState({\n            formData,\n        });\n      };\n\n    render(){\n        return(\n            <>\n            <div className=\"journalPage\">\n                <h1>Edit Journal Entry</h1>\n                <h3>Today my horoscope:</h3>\n                <form className=\"journal_entry\" ref={this.formRef} onSubmit={this.handleJournalSubmit}>\n                    <textarea name=\"journal\" id=\"entry\" cols=\"30\" rows=\"10\" type=\"text\" \n                        value={this.state.formData.journal}\n                        onChange={this.handleChange}/>\n                    <button\n                        type=\"submit\"\n                        className=\"btn #4dd0e1 cyan lighten-2 waves-effect waves-light\">\n                            Add Edit to Profile\n                        <i className=\"material-icons right\">send</i>\n                    </button>\n                    <Link \n                            className=\"btn red\"\n                            to={{\n                                pathname: '/profile'\n                            }}\n                        ><i class=\"material-icons left\">undo</i>\n                        Cancel\n                        </Link>           \n                </form> \n            </div>\n        </>\n        )\n    }\n}\n\nexport default EditJournalPage;","import React, { Component } from 'react';\nimport { Route } from 'react-router-dom'\nimport './App.css';\nimport NavBar from '../../components/NavBar/NavBar';\nimport LoginPage from '../LoginPage/LoginPage';\nimport SignupPage from '../SignupPage/SignupPage';\nimport userService from '../../services/userService';\nimport * as zodiacAPI from '../../services/zodiac-api';\nimport * as journalAPI from '../../services/journal-api';\nimport * as horoscopeAPI from '../../services/horoscope-api';\nimport ZodiacListPage from '../ZodiacListPage/ZodiacListPage';\nimport ProfilePage from '../ProfilePage/ProfilePage';\nimport AddJournalPage from '../JournalPage/AddJournalPage';\nimport EditJournalPage from '../EditJournalPage/EditJournalPage';\n\nclass App extends Component {\n  state = {\n    user: userService.getUser(),\n    signs: [],\n    journals:[],\n    horoscopes: [],\n  }\n\n  handleAddSign = async formData => {\n    const newProfile = await userService.updateUser(formData);\n    console.log(newProfile);\n    this.setState(state => ({\n      signs: [...state.signs, ...newProfile.signs]\n    }))\n  }\n\n  handleLogout = () => {\n    userService.logout();\n    this.setState({ user: null });\n  }\n\n  handleSignupOrLogin = () => {\n    this.setState({user: userService.getUser()});\n  }\n\n  handleAddJournal = async newJournalData => {\n    const newJournal = await journalAPI.create(newJournalData);\n    this.setState(state => ({\n      journals: [...state.journals, newJournal]\n    }), ()=> this.props.history.push('/profile'));\n  }\n\n  handleUpdateJournal = async updatedJournalData => {\n    const updatedJournal = await journalAPI.update(updatedJournalData);\n    const newJournalsArray = this.state.journals.map(j =>\n      j._id === updatedJournal._id ? updatedJournal : j);\n    this.setState(\n      {journals: newJournalsArray},\n      () => this.props.history.push('/profile')\n    )\n  }\n\n  handleDeleteJournal = async id => {\n    await journalAPI.deleteOne(id);\n    this.setState(state => ({\n      journals: state.journals.filter(j => j._id !== id)\n    }), () => this.props.history.push('/profile'));\n  }\n  \n  async componentDidMount() {\n    const signs = await zodiacAPI.getAllSigns();\n    console.log(signs, \"signs\")\n    const journals = await journalAPI.getAllJournals();\n    const horoscopes = await horoscopeAPI.getAllHoroscopes();\n    this.setState({journals})\n    this.setState({signs})\n    this.setState({horoscopes})\n  }\n\n  render () {\n    return (\n      <>\n        <NavBar \n          user={this.state.user}\n          handleLogout={this.handleLogout}\n        />\n        <Route exact path='/signup' render={({ history }) => \n          <SignupPage\n            history={history}\n            handleSignupOrLogin={this.handleSignupOrLogin}\n          />\n        }/>\n        <Route exact path='/login' render={({ history }) => \n          <LoginPage\n            history={history}\n            handleSignupOrLogin={this.handleSignupOrLogin}\n          />\n        }/>\n        <div className=\"container\">\n           <Route exact path=\"/\" render={()=> \n             <ZodiacListPage\n             handleAddSign={this.handleAddSign}\n              user={this.state.user}\n              signs={this.state.signs}\n          />\n        }>\n          </Route>\n          <Route exact path=\"/profile\" render={()=>\n          <ProfilePage \n            user={this.state.user}\n            signs={this.state.signs}\n            journals={this.state.journals}\n            handleDeleteJournal={this.handleDeleteJournal}\n          />\n          }>\n          </Route>\n          <Route exact path='/journal' render={()=> \n          <AddJournalPage \n            user={this.state.user}\n            handleAddJournal={this.handleAddJournal}\n          />  \n          }>\n          </Route>\n          <Route exact path='/edit' render={({location}) =>\n          <EditJournalPage \n            user={this.state.user}\n            handleUpdateJournal={this.handleUpdateJournal}\n            location={location}\n          /> \n        }>\n        </Route>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './pages/App/App';\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Router>\n    <React.StrictMode>\n      <Route render={({history}) => <App history={history} />} />\n    </React.StrictMode>\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}